{"version":3,"sources":["component/Movie.js","component/MovieGroup.js","component/Util.js","component/MovieList.js","component/MovieDetail.js","serviceWorker.js","index.js","App.js"],"names":["Movie","props","movie","style","container","to","id","src","image","alt","title","display","flexDirection","margin","padding","backgroundColor","borderRadius","marginBottom","fontSize","MovieGroup","movieGroup","groupName","movies","groupNameContainer","moviesContainer","map","index","key","maxWidth","width","border","overflowX","paddingBottom","get","url","callback","fetch","method","then","response","json","catch","error","console","log","apiUrl","groupType","imageType","MovieList","getFeed","window","removeEventListener","handleScroll","page","replace","updateFeed","feed","data","length","movieGroups","filter","group","type","row_name","poster","images","posterUrl","newMovieGroup","state","setState","addEventListener","scrollHeight","document","documentElement","scrollTop","this","onScroll","React","Component","textAlign","minHeight","alignItems","justifyContent","MovieDetail","movieId","queryString","parse","location","search","people","role","name","join","value","backgroundImageUrl","director","getPeopleNames","cast","details","label","getNotNull","meta","ageRating","releaseYear","running_time_friendly","imageContainer","card","description","verticalAlign","row","backButton","whiteSpace","paddingRight","height","borderColor","cursor","Boolean","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.802215bf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Movie(props) {\r\n\tconst { movie } = props;\r\n\treturn (\r\n\t\t<div style={style.container}>\r\n\t\t\t<Link to={'/movie?id=' + movie.id}>\r\n\t\t\t\t<img src={movie.image} style={style.image} alt='NA'></img>\r\n\t\t\t</Link>\r\n\t\t\t<span style={style.title}>{movie.title}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst style = {\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tmargin: '10px',\r\n\t\tpadding: '10px',\r\n\t\tbackgroundColor: '#36404a',\r\n\t\tborderRadius: '5px',\r\n\t},\r\n\timage: {\r\n\t\tmarginBottom: '5px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: '0.9rem'\r\n\t}\r\n}","import React from 'react';\r\nimport Movie from './Movie';\r\n\r\nexport default function MovieGroup(props) {\r\n\tconst { groupName, movies } = props.movieGroup;\r\n\treturn (\r\n\t\t<div style={style.container}>\r\n\t\t\t<div style={style.groupNameContainer}>\r\n\t\t\t\t<span>{groupName}</span>\r\n\t\t\t</div>\r\n\t\t\t<div style={style.moviesContainer}>\r\n\t\t\t\t{movies.map((movie, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Movie key={index} movie={movie} />\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst style = {\r\n\tcontainer: {\r\n\t\tmaxWidth: '100%',\r\n\t\twidth: '100%',\r\n\t\tborder: '3px solid white',\r\n\t\tborderRadius: '5px',\r\n\t\tmarginBottom: '20px',\r\n\t},\r\n\tgroupNameContainer: {\r\n\t\tmargin: '10px 0px',\r\n\t\tfontSize: '2rem',\r\n\t},\r\n\tmoviesContainer: {\r\n\t\tdisplay: 'flex',\r\n\t\toverflowX: 'auto',\r\n\t\tpaddingBottom: '20px',\r\n\t}\r\n};","export const get = (url, callback) => {\r\n\tfetch(url, { method: 'GET' })\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then(callback)\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log('Request failed', error);\r\n\t\t});\r\n}\r\n\t","import React from 'react';\r\nimport MovieGroup from './MovieGroup';\r\nimport { get } from './Util';\r\n\r\nconst apiUrl = 'https://cdn-discover.hooq.tv/v1.2/discover/feed?region=ID&page=[page]&perPage=20';\r\nconst groupType = 'Multi-Title-Manual-Curation';\r\nconst imageType = 'POSTER';\r\n\r\nclass MovieList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      movieGroups: []\r\n    }\r\n    this.page = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getFeed();\r\n  }\r\n\r\n  getFeed = () => {\r\n\t\twindow.removeEventListener('scroll', this.handleScroll);\r\n\t\t\r\n\t\tthis.page += 1;\r\n\t\tconst url = apiUrl.replace('[page]', this.page);\r\n\t\tget(url, this.updateFeed);\r\n  }\r\n\r\n  updateFeed = (feed) => {\r\n    if (feed.data.length === 0) return;\r\n\r\n    const groups = feed.data;\r\n    const multiTitleGroups = groups.filter(group => group.type === groupType);\r\n    const movieGroups = multiTitleGroups.map(group => {\r\n      const groupName = group.row_name;\r\n      const movies = group.data.map(movie => {\r\n        const poster = movie.images.filter(image => image.type === imageType)[0];\r\n        const posterUrl = poster ? poster.url : ''; \r\n        return {\r\n\t\t\t\t\tid: movie.id,\r\n          title: movie.title,\r\n          image: posterUrl, \r\n        }\r\n      });\r\n      return { groupName, movies }\r\n    })\r\n    const newMovieGroup = [ ...this.state.movieGroups, ...movieGroups ];\r\n    this.setState({ movieGroups: newMovieGroup });\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const percent = scrollTop / scrollHeight;\r\n    const needLoadNewPage = percent > 0.8;\r\n    if (needLoadNewPage) this.getFeed();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={style.container} onScroll={this.handleScroll}>\r\n        {this.state.movieGroups.map((movieGroup, index) => {\r\n          return (\r\n            <MovieGroup key={index} movieGroup={movieGroup} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style = {\r\n  container: {\r\n    textAlign: 'center',\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: 'calc(10px + 2vmin)',\r\n    padding: '20px',\r\n  }\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport { Link } from \"react-router-dom\";\r\nimport { get } from './Util';\r\n\r\nconst apiUrl = 'https://cdn-discover.hooq.tv/v1.2/discover/titles/';\r\n\r\nexport default class MovieDetail extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmovie: null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst values = queryString.parse(document.location.search);\r\n\t\tconst movieId = values.id;\r\n\t\tconst url = apiUrl + movieId;\r\n\t\tget(url, (response) => {\r\n\t\t\tif (response.data) {\r\n\t\t\t\tthis.setState({ movie: response.data });\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tgetPeopleNames(people, role) {\r\n\t\treturn people\r\n\t\t\t.filter(people => people.role === role)\r\n\t\t\t.map(people => people.name)\r\n\t\t\t.join(\", \"); \r\n\t}\r\n\r\n\tgetNotNull(value) {\r\n\t\treturn value || '-';\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { movie } = this.state;\r\n\t\tif (!movie) return null;\r\n\t\t\r\n\t\tconst backgroundImageUrl = movie.images[1].url;\r\n\t\tconst director = this.getPeopleNames(movie.people, 'DIRECTOR');\r\n\t\tconst cast = this.getPeopleNames(movie.people, 'CAST');\r\n\t\tconst details = [\r\n\t\t\t{ label: 'Age Rating', value: this.getNotNull(movie.meta.ageRating) },\r\n\t\t\t{ label: 'Release', value: this.getNotNull(movie.meta.releaseYear) },\r\n\t\t\t{ label: 'Run Time', value: this.getNotNull(movie.running_time_friendly) },\r\n\t\t\t{ label: 'Director', value: this.getNotNull(director) },\r\n\t\t\t{ label: 'Cast', value: this.getNotNull(cast) },\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<div style={style.container}>\r\n\t\t\t\t<div style={style.imageContainer}><img src={backgroundImageUrl} alt='NA' style={style.image}></img></div>\r\n\t\t\t\t<div style={{ ...style.card, fontSize: '1.5em' }}><span>{movie.title}</span></div>\r\n\t\t\t\t<div style={style.card}><span>{movie.description}</span></div>\r\n\t\t\t\t<div style={style.card}>\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tbody style={{ verticalAlign: 'top' }}>\r\n\t\t\t\t\t\t\t{details.map(({label, value}, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={index} style={style.row}>\r\n\t\t\t\t\t\t\t\t\t<td style={style.label}>{label}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{value}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t<Link to={'/'}><button style={style.backButton}>Back</button></Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst style = {\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'stretch',\r\n\t\talignItems: 'stretch',\r\n\t\tmaxWidth: '580px',\r\n\t\tmargin: '30px auto',\r\n\t\tpadding: '20px',\r\n\t\tborderRadius: '20px',\r\n\t\tbackgroundColor: '#226ec1',\r\n\t},\r\n\tcard: {\r\n\t\tbackgroundColor: 'darkcyan',\r\n    padding: '15px 10px',\r\n    marginBottom: '15px',\r\n    borderRadius: '10px',\r\n\t},\r\n\timageContainer: {\r\n\t\tmargin: 'auto',\r\n\t\tmarginBottom: '15px',\r\n\t},\r\n\timage: {\r\n\t\twidth: '100%',\r\n\t\tborderRadius: '10px'\r\n\t},\r\n\trow: {\r\n\t\tpadding: '10px 0px'\r\n\t},\r\n\tlabel: {\r\n\t\twhiteSpace: 'nowrap',\r\n\t\tpaddingRight: '20px',\r\n\t\tpaddingBottom: '10px',\r\n\t},\r\n\tbackButton: {\r\n\t\twidth: '100%',\r\n    height: '40px',\r\n    backgroundColor: 'skyblue',\r\n    borderColor: 'cornflowerblue',\r\n    borderRadius: '10px',\r\n    cursor: 'pointer',\r\n\t}\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nimport MovieList from './component/MovieList';\r\nimport MovieDetail from './component/MovieDetail';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path='/movie'>\r\n            <MovieDetail />\r\n          </Route>\r\n          <Route path='/'>\r\n            <MovieList />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n"],"sourceRoot":""}